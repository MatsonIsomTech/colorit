{% import "_includes/forms" as forms %}

{% if field.isFieldTemplate %}

{#     {{ forms.textField({
        label: 'Name'|t('palette'),
        instructions: 'What this field template will be called in the CP.'|t('palette'),
        id: 'name',
        name: 'name',
        placeholder: '',
        value: field.name ?? '',
        errors: field.getErrors('name') ?? false,
        first: true
    }) }} #}

{% else %}

    {{ forms.selectField({
        label: "Field Template"|t('palette'),
        instructions: "Use a field template to define this fields settings."|t('palette'),
        id: 'fieldTemplateId',
        name: 'fieldTemplateId',
        options: [
            {
                value: '',
                label: 'Custom field settings'
            }
        ],
        value: field.fieldTemplateId,
        errors: field.getErrors('fieldTemplateId'),
    }) }}

    <hr>

{% endif %}


<div id="palette-{{ field.id }}" class="{{ field.fieldTemplateId ? 'hidden' }}">

    {{ forms.checkboxSelectField({
        label: "Base Colours"|t('palette'),
        instructions: "Select any base colours that you would like to include in your palette field."|t('palette'),
        id: 'paletteBaseColours',
        name: 'paletteBaseColours',
        options: craft.palette.colours.baseColoursAsOptions,
        values: field.paletteBaseColours,
        errors: field.getErrors('paletteBaseColours')
    })}}

    {{ forms.lightswitchField({
        label: "Opacity"|t('palette'),
        instructions: "Allow the user to set opacty on this palette field."|t('palette'),
        id: 'allowOpacity',
        name: 'allowOpacity',
        on: field.allowOpacity,
        errors: field.getErrors('allowOpacity')
    }) }}

    {{ forms.lightswitchField({
        label: "Custom Colour"|t('palette'),
        instructions: "Allow the user to set a custom colour hex for this palette field."|t('palette'),
        id: 'allowCustomColour',
        name: 'allowCustomColour',
        on: field.allowCustomColour,
        errors: field.getErrors('allowCustomColour')
    }) }}

</div>
